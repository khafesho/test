{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahdi\\\\Desktop\\\\test\\\\src\\\\components\\\\pages\\\\Login.js\";\nimport React, { Component } from 'react';\nimport validator from 'validator';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {\n        email: '',\n        password: ''\n      },\n      errors: {}\n    };\n  }\n\n  handleValidation(callback) {\n    let {\n      fields\n    } = this.state;\n    let errors = {};\n    let formIsValid = true; // Email\n\n    if (validator.isEmpty(fields.email)) {\n      formIsValid = false;\n      errors[\"email\"] = \"plz , enter email\";\n    } else if (!validator.isEmail(fields.email)) {\n      formIsValid = false;\n      errors[\"email\"] = \"email is not Valid ! \";\n    } // Email\n\n\n    if (validator.isEmpty(fields.password)) {\n      formIsValid = false;\n      errors[\"password\"] = \"plz , enter password\";\n    } else if (!validator.isLength(fields.password, {\n      min: 6,\n      max: undefined\n    })) {\n      formIsValid = false;\n      errors[\"password\"] = \"password is not Valid ! \";\n    }\n\n    this.setState({\n      errors\n    }, () => {\n      return callback(formIsValid);\n    });\n  }\n\n  handleChange(event) {\n    let fields = this.state.fields;\n    let target = event.target;\n    fields[target.name] = target.value;\n    this.setState({\n      fields\n    });\n  }\n\n  handleRequest() {\n    const {\n      email,\n      password\n    } = this.state.fields;\n    let data = new FormData();\n    data.append('email', email);\n    data.append('password', password);\n    axios.post('http://farmaniehdrycleaning.com/api_rest/rest/product/login.php', data).then(response => {\n      //localStorage.setItem('api_token' , response.data.data.api_token);\n      console.log(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.handleValidation(valid => {\n      if (valid) this.handleRequest();\n    });\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state.fields;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit.bind(this),\n        className: \"col-lg-5\",\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: [\"form-control\", errors[\"email\"] ? 'is-invalid' : ''].join(' '),\n            name: \"email\",\n            value: email,\n            onChange: this.handleChange.bind(this),\n            placeholder: \"Please enter your email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"invalid-feedback rtl\",\n            style: {\n              display: errors[\"email\"] ? 'block' : 'none'\n            },\n            children: errors[\"email\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: [\"form-control\", errors[\"password\"] ? 'is-invalid' : ''].join(' '),\n            name: \"password\",\n            value: password,\n            onChange: this.handleChange.bind(this),\n            placeholder: \"Please enter your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"invalid-feedback rtl\",\n            style: {\n              display: errors[\"password\"] ? 'block' : 'none'\n            },\n            children: errors[\"password\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/mahdi/Desktop/test/src/components/pages/Login.js"],"names":["React","Component","validator","axios","Login","constructor","props","state","fields","email","password","errors","handleValidation","callback","formIsValid","isEmpty","isEmail","isLength","min","max","undefined","setState","handleChange","event","target","name","value","handleRequest","data","FormData","append","post","then","response","console","log","catch","error","handleSubmit","preventDefault","valid","render","bind","marginTop","join","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport validator from 'validator';\r\nimport axios from 'axios';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields : {\r\n                email : '',\r\n                password : ''\r\n            },\r\n            errors : {}\r\n        }\r\n    }\r\n\r\n    handleValidation(callback) {\r\n        let { fields } = this.state;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        // Email\r\n        if(validator.isEmpty(fields.email)) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"plz , enter email\";\r\n        } else if(! validator.isEmail(fields.email)) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"email is not Valid ! \";\r\n        }\r\n\r\n        // Email\r\n        if(validator.isEmpty(fields.password)) {\r\n            formIsValid = false;\r\n            errors[\"password\"] = \"plz , enter password\";\r\n        } else if(! validator.isLength(fields.password , { min : 6 , max : undefined})) {\r\n            formIsValid = false;\r\n            errors[\"password\"] = \"password is not Valid ! \";\r\n        }\r\n\r\n        this.setState({ errors },() => {\r\n            return callback(formIsValid)\r\n        });\r\n\r\n    }\r\n    handleChange(event) {\r\n        let fields = this.state.fields;\r\n        let target = event.target;\r\n        fields[target.name] = target.value;\r\n        this.setState({fields});\r\n    }\r\n\r\n    handleRequest() {\r\n        const { email , password } = this.state.fields;\r\n\r\n        let data = new FormData();\r\n        data.append('email' , email);\r\n        data.append('password' , password);\r\n\r\n        axios.post('http://farmaniehdrycleaning.com/api_rest/rest/product/login.php' , data)\r\n\t\t\r\n            .then(response => {\r\n                //localStorage.setItem('api_token' , response.data.data.api_token);\r\n\t\t\t\tconsole.log(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        this.handleValidation((valid) => {\r\n            if(valid) this.handleRequest()\r\n        })\r\n    }\r\n    render() {\r\n        const {email , password} = this.state.fields;\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <h2>Login Form</h2>\r\n                <form onSubmit={this.handleSubmit.bind(this)} className=\"col-lg-5\" style={{ marginTop : 20}}>\r\n                    <div className=\"form-group\">\r\n                        <label>Email : </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={[\"form-control\" , errors[\"email\"] ? 'is-invalid' : ''].join(' ')}\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={this.handleChange.bind(this)}\r\n                            placeholder=\"Please enter your email\"/>\r\n                        <span className=\"invalid-feedback rtl\" style={{ display : errors[\"email\"] ? 'block' : 'none'}}>{errors[\"email\"]}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password : </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className={[\"form-control\" , errors[\"password\"] ? 'is-invalid' : ''].join(' ')}\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={this.handleChange.bind(this)}\r\n                            placeholder=\"Please enter your password\"/>\r\n                        <span className=\"invalid-feedback rtl\" style={{ display : errors[\"password\"] ? 'block' : 'none'}}>{errors[\"password\"]}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-danger\" type=\"submit\">Login</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}